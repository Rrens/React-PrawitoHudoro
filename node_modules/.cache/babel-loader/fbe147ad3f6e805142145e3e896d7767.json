{"ast":null,"code":"var _jsxFileName = \"D:\\\\belajar\\\\prawito_hudoro\\\\react-app\\\\src\\\\container\\\\Pages\\\\BlogPost\\\\BlogPost.jsx\";\nimport React, { Component, Fragment } from \"react\";\nimport \"./BlogPost.css\";\nimport Post from \"../../../components/Post/Post\";\nimport axios from \"axios\"; // import { Link, Navigate } from \"react-router-dom\";\n// import { useNavigate } from \"@reach/router\";\n\nimport { useNavigate } from \"react-router-dom\"; // import navigate from \".\";\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass BlogPost extends Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      post: [],\n      formBlogPost: {\n        id: 1,\n        title: \"\",\n        body: \"\",\n        userId: 1\n      },\n      isUpdate: false\n    };\n\n    this.postDataToAPI = async () => {\n      axios.post(\"http://localhost:3001/posts\", this.state.formBlogPost).then(res => {\n        console.log(res);\n        this.getPostDataAPI();\n      }, err => {\n        console.log(\"error: \", err);\n      });\n    };\n\n    this.getPostDataAPI = async () => {\n      axios.get(\"http://localhost:3001/posts?_sort=id&_order=desc\").then(DataAPI => {\n        // console.log(DataAPI.data);\n        this.setState({\n          post: DataAPI.data\n        });\n      });\n    };\n\n    this.removeDataHandler = data => {\n      axios.delete(`http://localhost:3001/posts/${data}`).then(res => {\n        console.log(res);\n        console.log(this.state.post);\n        this.getPostDataAPI();\n      }); // console.log(data);\n    };\n\n    this.putDataHandle = () => {\n      axios.put(`http://localhost:3001/posts/${this.state.formBlogPost.id}`, this.state.formBlogPost).then(res => {\n        console.log(res);\n        this.getPostDataAPI();\n        this.setState({\n          isUpdate: false,\n          formBlogPost: {\n            id: 1,\n            title: \"\",\n            body: \"\",\n            userId: 1\n          }\n        });\n      });\n    };\n\n    this.handleFormChange = event => {\n      // console.log(\"form Change\", event.target.value);\n      let title = event.target.value; // mencopy formBlogPost agar menjadi object, ketika this.state.formBlogPost berisi value tidak berupa object, sehingga perlu di copy agar bentuknya tetap object\n\n      let newFormBlogSpot = { ...this.state.formBlogPost\n      }; // console.log(\"init state\", this.state.formBlogPost);\n      // console.log(\"new Value\", newFormBlogSpot);\n\n      let timestamp = new Date().getTime();\n\n      if (!this.state.isUpdate) {\n        newFormBlogSpot[\"id\"] = timestamp;\n      } // merubah value object berasal nama (title, body)\n\n\n      newFormBlogSpot[event.target.name] = event.target.value;\n      this.setState({\n        // mengambil formBlogPost dari newFormBlogPost\n        formBlogPost: newFormBlogSpot\n      }, () => {// console.log(\"value obj formBlogPost\", this.state.formBlogPost);\n      });\n    };\n\n    this.handleUpdate = async data => {\n      // console.log(data);\n      this.setState({\n        formBlogPost: data,\n        isUpdate: true\n      });\n    };\n\n    this.handleSubmit = () => {\n      // console.log(this.state.formBlogPost);\n      if (!this.state.isUpdate) {\n        this.postDataToAPI();\n      } else {\n        // this.handleUpdate();\n        console.log(this.state.formBlogPost);\n      }\n    };\n  }\n\n  // removeDataHandler(data, e) {\n  //   axios.delete(`http://localhost:3001/posts/${data}`).then((res) => {\n  //     console.log(res);\n  //     console.log(this.state.post);\n  //     //getPostDataAPI();\n  //   });\n  //   // console.log(data);\n  // }\n  componentDidMount() {\n    this.getPostDataAPI();\n  } // Fetch API with fetch\n  // fetch(\"https://jsonplaceholder.typicode.com/posts\")\n  //   .then((Response) => Response.json())\n  //   .then((json) => {\n  //     this.setState({\n  //       post: json,\n  //     });\n  //   });\n  //   fetch API with Axios\n  // axios.get(\"http://localhost:3001/posts\").then((DataAPI) => {\n  //   console.log(DataAPI.data);\n  //   this.setState({\n  //     post: DataAPI.data,\n  //   });\n  // });\n\n\n  // handleDetail = (id) => {\n  //   // <Link to=\"/\">Home</Link>;\n  //   // let history = useNavigate();\n  //   // this.props.history.push(`/detail/${id}`);\n  //   // this.props.history.push(`/detail/${id}`);\n  //   // <Link to={`/detail/${id}`} />;\n  //   // history(`/detail/${id}`);\n  //   // history(\"/home\");\n  //   // history(`?term=${searchValue}`);\n  //   const navigate = useNavigate();\n  //   navigate(`/home`);\n  //   // <Navigate to=\"/\" replace={true} />;\n  //   console.log(this.props);\n  // };\n  render() {\n    // console.log(this.props);\n    return /*#__PURE__*/_jsxDEV(Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"section-title\",\n        children: \"Blog Post\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-add-post\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"title\",\n          children: \"Title\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 173,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"title\",\n          placeholder: \"add Title\",\n          value: this.state.formBlogPost.title,\n          onChange: this.handleFormChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 174,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"body\",\n          children: \"Blog Content\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 181,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          name: \"body\",\n          id: \"body\",\n          cols: \"30\",\n          rows: \"10\",\n          placeholder: \"add Blog Content\",\n          value: this.state.formBlogPost.body,\n          onChange: this.handleFormChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 182,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn-submit\",\n          onClick: this.handleSubmit,\n          children: \"Simpan\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 191,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 9\n      }, this), this.state.post.map(post => {\n        return /*#__PURE__*/_jsxDEV(Post, {\n          data: post,\n          remove: this.removeDataHandler,\n          update: this.handleUpdate // Detail={this.handleDetail}\n\n        }, post.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 197,\n          columnNumber: 13\n        }, this);\n      })]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 7\n    }, this);\n  }\n\n} // function MyBackButton() {\n//   const navigation = useNavigate();\n//   return (\n//     <button\n//       title=\"back\"\n//       onClick={() => {\n//         navigation.goBack();\n//       }}\n//     />\n//   );\n// }\n// function navigate(props) {\n//   const navigation = useNavigate();\n//   return <MyBackButton {...props} navigation={navigation} />;\n// }\n\n\nexport default BlogPost;","map":{"version":3,"sources":["D:/belajar/prawito_hudoro/react-app/src/container/Pages/BlogPost/BlogPost.jsx"],"names":["React","Component","Fragment","Post","axios","useNavigate","BlogPost","state","post","formBlogPost","id","title","body","userId","isUpdate","postDataToAPI","then","res","console","log","getPostDataAPI","err","get","DataAPI","setState","data","removeDataHandler","delete","putDataHandle","put","handleFormChange","event","target","value","newFormBlogSpot","timestamp","Date","getTime","name","handleUpdate","handleSubmit","componentDidMount","render","map"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAO,gBAAP;AAEA,OAAOC,IAAP,MAAiB,+BAAjB;AACA,OAAOC,KAAP,MAAkB,OAAlB,C,CACA;AACA;;AACA,SAASC,WAAT,QAA4B,kBAA5B,C,CACA;;;;AAEA,MAAMC,QAAN,SAAuBL,SAAvB,CAAiC;AAAA;AAAA;AAAA,SAC/BM,KAD+B,GACvB;AACNC,MAAAA,IAAI,EAAE,EADA;AAENC,MAAAA,YAAY,EAAE;AACZC,QAAAA,EAAE,EAAE,CADQ;AAEZC,QAAAA,KAAK,EAAE,EAFK;AAGZC,QAAAA,IAAI,EAAE,EAHM;AAIZC,QAAAA,MAAM,EAAE;AAJI,OAFR;AAQNC,MAAAA,QAAQ,EAAE;AARJ,KADuB;;AAAA,SAY/BC,aAZ+B,GAYf,YAAY;AAC1BX,MAAAA,KAAK,CAACI,IAAN,CAAW,6BAAX,EAA0C,KAAKD,KAAL,CAAWE,YAArD,EAAmEO,IAAnE,CACGC,GAAD,IAAS;AACPC,QAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACA,aAAKG,cAAL;AACD,OAJH,EAKGC,GAAD,IAAS;AACPH,QAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAuBE,GAAvB;AACD,OAPH;AASD,KAtB8B;;AAAA,SAwB/BD,cAxB+B,GAwBd,YAAY;AAC3BhB,MAAAA,KAAK,CACFkB,GADH,CACO,kDADP,EAEGN,IAFH,CAESO,OAAD,IAAa;AACjB;AACA,aAAKC,QAAL,CAAc;AACZhB,UAAAA,IAAI,EAAEe,OAAO,CAACE;AADF,SAAd;AAGD,OAPH;AAQD,KAjC8B;;AAAA,SAmC/BC,iBAnC+B,GAmCVD,IAAD,IAAU;AAC5BrB,MAAAA,KAAK,CAACuB,MAAN,CAAc,+BAA8BF,IAAK,EAAjD,EAAoDT,IAApD,CAA0DC,GAAD,IAAS;AAChEC,QAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACAC,QAAAA,OAAO,CAACC,GAAR,CAAY,KAAKZ,KAAL,CAAWC,IAAvB;AACA,aAAKY,cAAL;AACD,OAJD,EAD4B,CAO5B;AACD,KA3C8B;;AAAA,SA6C/BQ,aA7C+B,GA6Cf,MAAM;AACpBxB,MAAAA,KAAK,CACFyB,GADH,CAEK,+BAA8B,KAAKtB,KAAL,CAAWE,YAAX,CAAwBC,EAAG,EAF9D,EAGI,KAAKH,KAAL,CAAWE,YAHf,EAKGO,IALH,CAKSC,GAAD,IAAS;AACbC,QAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACA,aAAKG,cAAL;AACA,aAAKI,QAAL,CAAc;AACZV,UAAAA,QAAQ,EAAE,KADE;AAEZL,UAAAA,YAAY,EAAE;AACZC,YAAAA,EAAE,EAAE,CADQ;AAEZC,YAAAA,KAAK,EAAE,EAFK;AAGZC,YAAAA,IAAI,EAAE,EAHM;AAIZC,YAAAA,MAAM,EAAE;AAJI;AAFF,SAAd;AASD,OAjBH;AAkBD,KAhE8B;;AAAA,SA+F/BiB,gBA/F+B,GA+FXC,KAAD,IAAW;AAC5B;AACA,UAAIpB,KAAK,GAAGoB,KAAK,CAACC,MAAN,CAAaC,KAAzB,CAF4B,CAG5B;;AACA,UAAIC,eAAe,GAAG,EAAE,GAAG,KAAK3B,KAAL,CAAWE;AAAhB,OAAtB,CAJ4B,CAK5B;AACA;;AACA,UAAI0B,SAAS,GAAG,IAAIC,IAAJ,GAAWC,OAAX,EAAhB;;AACA,UAAI,CAAC,KAAK9B,KAAL,CAAWO,QAAhB,EAA0B;AACxBoB,QAAAA,eAAe,CAAC,IAAD,CAAf,GAAwBC,SAAxB;AACD,OAV2B,CAW5B;;;AACAD,MAAAA,eAAe,CAACH,KAAK,CAACC,MAAN,CAAaM,IAAd,CAAf,GAAqCP,KAAK,CAACC,MAAN,CAAaC,KAAlD;AAEA,WAAKT,QAAL,CACE;AACE;AACAf,QAAAA,YAAY,EAAEyB;AAFhB,OADF,EAKE,MAAM,CACJ;AACD,OAPH;AASD,KAtH8B;;AAAA,SAwH/BK,YAxH+B,GAwHhB,MAAOd,IAAP,IAAgB;AAC7B;AACA,WAAKD,QAAL,CAAc;AACZf,QAAAA,YAAY,EAAEgB,IADF;AAEZX,QAAAA,QAAQ,EAAE;AAFE,OAAd;AAID,KA9H8B;;AAAA,SAgI/B0B,YAhI+B,GAgIhB,MAAM;AACnB;AACA,UAAI,CAAC,KAAKjC,KAAL,CAAWO,QAAhB,EAA0B;AACxB,aAAKC,aAAL;AACD,OAFD,MAEO;AACL;AACAG,QAAAA,OAAO,CAACC,GAAR,CAAY,KAAKZ,KAAL,CAAWE,YAAvB;AACD;AACF,KAxI8B;AAAA;;AAiE/B;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEAgC,EAAAA,iBAAiB,GAAG;AAClB,SAAKrB,cAAL;AACD,GA7E8B,CA+E/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AA6CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AAEA;AACA;AACA;AAEAsB,EAAAA,MAAM,GAAG;AACP;AACA,wBACE,QAAC,QAAD;AAAA,8BACE;AAAG,QAAA,SAAS,EAAC,eAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAK,QAAA,SAAS,EAAC,eAAf;AAAA,gCACE;AAAO,UAAA,OAAO,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AACE,UAAA,IAAI,EAAC,MADP;AAEE,UAAA,IAAI,EAAC,OAFP;AAGE,UAAA,WAAW,EAAC,WAHd;AAIE,UAAA,KAAK,EAAE,KAAKnC,KAAL,CAAWE,YAAX,CAAwBE,KAJjC;AAKE,UAAA,QAAQ,EAAE,KAAKmB;AALjB;AAAA;AAAA;AAAA;AAAA,gBAFF,eASE;AAAO,UAAA,OAAO,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBATF,eAUE;AACE,UAAA,IAAI,EAAC,MADP;AAEE,UAAA,EAAE,EAAC,MAFL;AAGE,UAAA,IAAI,EAAC,IAHP;AAIE,UAAA,IAAI,EAAC,IAJP;AAKE,UAAA,WAAW,EAAC,kBALd;AAME,UAAA,KAAK,EAAE,KAAKvB,KAAL,CAAWE,YAAX,CAAwBG,IANjC;AAOE,UAAA,QAAQ,EAAE,KAAKkB;AAPjB;AAAA;AAAA;AAAA;AAAA,gBAVF,eAmBE;AAAQ,UAAA,SAAS,EAAC,YAAlB;AAA+B,UAAA,OAAO,EAAE,KAAKU,YAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAnBF;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF,EAyBG,KAAKjC,KAAL,CAAWC,IAAX,CAAgBmC,GAAhB,CAAqBnC,IAAD,IAAU;AAC7B,4BACE,QAAC,IAAD;AAEE,UAAA,IAAI,EAAEA,IAFR;AAGE,UAAA,MAAM,EAAE,KAAKkB,iBAHf;AAIE,UAAA,MAAM,EAAE,KAAKa,YAJf,CAKE;;AALF,WACO/B,IAAI,CAACE,EADZ;AAAA;AAAA;AAAA;AAAA,gBADF;AASD,OAVA,CAzBH;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAwCD;;AAtM8B,C,CAyMjC;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;;;AAEA,eAAeJ,QAAf","sourcesContent":["import React, { Component, Fragment } from \"react\";\r\nimport \"./BlogPost.css\";\r\n\r\nimport Post from \"../../../components/Post/Post\";\r\nimport axios from \"axios\";\r\n// import { Link, Navigate } from \"react-router-dom\";\r\n// import { useNavigate } from \"@reach/router\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n// import navigate from \".\";\r\n\r\nclass BlogPost extends Component {\r\n  state = {\r\n    post: [],\r\n    formBlogPost: {\r\n      id: 1,\r\n      title: \"\",\r\n      body: \"\",\r\n      userId: 1,\r\n    },\r\n    isUpdate: false,\r\n  };\r\n\r\n  postDataToAPI = async () => {\r\n    axios.post(\"http://localhost:3001/posts\", this.state.formBlogPost).then(\r\n      (res) => {\r\n        console.log(res);\r\n        this.getPostDataAPI();\r\n      },\r\n      (err) => {\r\n        console.log(\"error: \", err);\r\n      }\r\n    );\r\n  };\r\n\r\n  getPostDataAPI = async () => {\r\n    axios\r\n      .get(\"http://localhost:3001/posts?_sort=id&_order=desc\")\r\n      .then((DataAPI) => {\r\n        // console.log(DataAPI.data);\r\n        this.setState({\r\n          post: DataAPI.data,\r\n        });\r\n      });\r\n  };\r\n\r\n  removeDataHandler = (data) => {\r\n    axios.delete(`http://localhost:3001/posts/${data}`).then((res) => {\r\n      console.log(res);\r\n      console.log(this.state.post);\r\n      this.getPostDataAPI();\r\n    });\r\n\r\n    // console.log(data);\r\n  };\r\n\r\n  putDataHandle = () => {\r\n    axios\r\n      .put(\r\n        `http://localhost:3001/posts/${this.state.formBlogPost.id}`,\r\n        this.state.formBlogPost\r\n      )\r\n      .then((res) => {\r\n        console.log(res);\r\n        this.getPostDataAPI();\r\n        this.setState({\r\n          isUpdate: false,\r\n          formBlogPost: {\r\n            id: 1,\r\n            title: \"\",\r\n            body: \"\",\r\n            userId: 1,\r\n          },\r\n        });\r\n      });\r\n  };\r\n  // removeDataHandler(data, e) {\r\n  //   axios.delete(`http://localhost:3001/posts/${data}`).then((res) => {\r\n  //     console.log(res);\r\n  //     console.log(this.state.post);\r\n  //     //getPostDataAPI();\r\n  //   });\r\n\r\n  //   // console.log(data);\r\n  // }\r\n\r\n  componentDidMount() {\r\n    this.getPostDataAPI();\r\n  }\r\n\r\n  // Fetch API with fetch\r\n  // fetch(\"https://jsonplaceholder.typicode.com/posts\")\r\n  //   .then((Response) => Response.json())\r\n  //   .then((json) => {\r\n  //     this.setState({\r\n  //       post: json,\r\n  //     });\r\n  //   });\r\n  //   fetch API with Axios\r\n  // axios.get(\"http://localhost:3001/posts\").then((DataAPI) => {\r\n  //   console.log(DataAPI.data);\r\n  //   this.setState({\r\n  //     post: DataAPI.data,\r\n  //   });\r\n  // });\r\n\r\n  handleFormChange = (event) => {\r\n    // console.log(\"form Change\", event.target.value);\r\n    let title = event.target.value;\r\n    // mencopy formBlogPost agar menjadi object, ketika this.state.formBlogPost berisi value tidak berupa object, sehingga perlu di copy agar bentuknya tetap object\r\n    let newFormBlogSpot = { ...this.state.formBlogPost };\r\n    // console.log(\"init state\", this.state.formBlogPost);\r\n    // console.log(\"new Value\", newFormBlogSpot);\r\n    let timestamp = new Date().getTime();\r\n    if (!this.state.isUpdate) {\r\n      newFormBlogSpot[\"id\"] = timestamp;\r\n    }\r\n    // merubah value object berasal nama (title, body)\r\n    newFormBlogSpot[event.target.name] = event.target.value;\r\n\r\n    this.setState(\r\n      {\r\n        // mengambil formBlogPost dari newFormBlogPost\r\n        formBlogPost: newFormBlogSpot,\r\n      },\r\n      () => {\r\n        // console.log(\"value obj formBlogPost\", this.state.formBlogPost);\r\n      }\r\n    );\r\n  };\r\n\r\n  handleUpdate = async (data) => {\r\n    // console.log(data);\r\n    this.setState({\r\n      formBlogPost: data,\r\n      isUpdate: true,\r\n    });\r\n  };\r\n\r\n  handleSubmit = () => {\r\n    // console.log(this.state.formBlogPost);\r\n    if (!this.state.isUpdate) {\r\n      this.postDataToAPI();\r\n    } else {\r\n      // this.handleUpdate();\r\n      console.log(this.state.formBlogPost);\r\n    }\r\n  };\r\n\r\n  // handleDetail = (id) => {\r\n  //   // <Link to=\"/\">Home</Link>;\r\n  //   // let history = useNavigate();\r\n  //   // this.props.history.push(`/detail/${id}`);\r\n  //   // this.props.history.push(`/detail/${id}`);\r\n  //   // <Link to={`/detail/${id}`} />;\r\n  //   // history(`/detail/${id}`);\r\n  //   // history(\"/home\");\r\n  //   // history(`?term=${searchValue}`);\r\n\r\n  //   const navigate = useNavigate();\r\n\r\n  //   navigate(`/home`);\r\n\r\n  //   // <Navigate to=\"/\" replace={true} />;\r\n  //   console.log(this.props);\r\n  // };\r\n\r\n  render() {\r\n    // console.log(this.props);\r\n    return (\r\n      <Fragment>\r\n        <p className=\"section-title\">Blog Post</p>\r\n        <div className=\"form-add-post\">\r\n          <label htmlFor=\"title\">Title</label>\r\n          <input\r\n            type=\"text\"\r\n            name=\"title\"\r\n            placeholder=\"add Title\"\r\n            value={this.state.formBlogPost.title}\r\n            onChange={this.handleFormChange}\r\n          />\r\n          <label htmlFor=\"body\">Blog Content</label>\r\n          <textarea\r\n            name=\"body\"\r\n            id=\"body\"\r\n            cols=\"30\"\r\n            rows=\"10\"\r\n            placeholder=\"add Blog Content\"\r\n            value={this.state.formBlogPost.body}\r\n            onChange={this.handleFormChange}\r\n          />\r\n          <button className=\"btn-submit\" onClick={this.handleSubmit}>\r\n            Simpan\r\n          </button>\r\n        </div>\r\n        {this.state.post.map((post) => {\r\n          return (\r\n            <Post\r\n              key={post.id}\r\n              data={post}\r\n              remove={this.removeDataHandler}\r\n              update={this.handleUpdate}\r\n              // Detail={this.handleDetail}\r\n            />\r\n          );\r\n        })}\r\n        {/* {console.log(this.state.post)} */}\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n\r\n// function MyBackButton() {\r\n//   const navigation = useNavigate();\r\n\r\n//   return (\r\n//     <button\r\n//       title=\"back\"\r\n//       onClick={() => {\r\n//         navigation.goBack();\r\n//       }}\r\n//     />\r\n//   );\r\n// }\r\n\r\n// function navigate(props) {\r\n//   const navigation = useNavigate();\r\n//   return <MyBackButton {...props} navigation={navigation} />;\r\n// }\r\n\r\nexport default BlogPost;\r\n"]},"metadata":{},"sourceType":"module"}